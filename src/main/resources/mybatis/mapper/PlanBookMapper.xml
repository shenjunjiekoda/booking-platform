<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.shenjunjie.booking.dao.PlanBookMapper">
    <resultMap id="BaseResultMap" type="cn.shenjunjie.booking.entity.PlanBook">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="plan_id" jdbcType="BIGINT" property="planId"/>
        <result column="book_id" jdbcType="BIGINT" property="bookId"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="stu_num" jdbcType="BIGINT" property="stuNum"/>
        <result column="teacher_num" jdbcType="BIGINT" property="teacherNum"/>
        <result column="actual_num" jdbcType="INTEGER" property="actualNum"/>
        <result column="update_at" jdbcType="TIMESTAMP" property="updateAt"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, plan_id, book_id, status, stu_num, teacher_num, actual_num, update_at, update_by
  </sql>
    <select id="selectByExample" parameterType="cn.shenjunjie.booking.entity.PlanBookExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from plan_book
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from plan_book
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from plan_book
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="cn.shenjunjie.booking.entity.PlanBookExample">
        delete from plan_book
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.shenjunjie.booking.entity.PlanBook">
    insert into plan_book (id, plan_id, book_id, 
      status, stu_num, teacher_num, 
      actual_num, update_at, update_by
      )
    values (#{id,jdbcType=BIGINT}, #{planId,jdbcType=BIGINT}, #{bookId,jdbcType=BIGINT}, 
      #{status,jdbcType=VARCHAR}, #{stuNum,jdbcType=BIGINT}, #{teacherNum,jdbcType=BIGINT}, 
      #{actualNum,jdbcType=INTEGER}, #{updateAt,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="cn.shenjunjie.booking.entity.PlanBook">
        insert into plan_book
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="planId != null">
                plan_id,
            </if>
            <if test="bookId != null">
                book_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="stuNum != null">
                stu_num,
            </if>
            <if test="teacherNum != null">
                teacher_num,
            </if>
            <if test="actualNum != null">
                actual_num,
            </if>
            <if test="updateAt != null">
                update_at,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="planId != null">
                #{planId,jdbcType=BIGINT},
            </if>
            <if test="bookId != null">
                #{bookId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="stuNum != null">
                #{stuNum,jdbcType=BIGINT},
            </if>
            <if test="teacherNum != null">
                #{teacherNum,jdbcType=BIGINT},
            </if>
            <if test="actualNum != null">
                #{actualNum,jdbcType=INTEGER},
            </if>
            <if test="updateAt != null">
                #{updateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.shenjunjie.booking.entity.PlanBookExample"
            resultType="java.lang.Long">
        select count(*) from plan_book
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="selectByPlanId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from plan_book
        where plan_id = #{planId,jdbcType=BIGINT}
    </select>
    <select id="selectByPlanIdAndStatus" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from plan_book
        where plan_id = #{planId,jdbcType=BIGINT}
        and status = #{status,jdbcType=VARCHAR}
    </select>
    <select id="selectByClassIdAndStatus" resultMap="BaseResultMap">
        SELECT pb.* FROM `plan_book` pb
        join plan p
        on p.id = pb.plan_id
        where pb.status = #{status,jdbcType=VARCHAR}
        and p.class_id = #{classId,jdbcType=BIGINT}
    </select>
    <select id="selectByClassId" resultMap="BaseResultMap">
        SELECT pb.* FROM `plan_book` pb
        join plan p
        on p.id = pb.plan_id
        where p.class_id = #{classId,jdbcType=BIGINT}
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update plan_book
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.planId != null">
                plan_id = #{record.planId,jdbcType=BIGINT},
            </if>
            <if test="record.bookId != null">
                book_id = #{record.bookId,jdbcType=BIGINT},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.stuNum != null">
                stu_num = #{record.stuNum,jdbcType=BIGINT},
            </if>
            <if test="record.teacherNum != null">
                teacher_num = #{record.teacherNum,jdbcType=BIGINT},
            </if>
            <if test="record.actualNum != null">
                actual_num = #{record.actualNum,jdbcType=INTEGER},
            </if>
            <if test="record.updateAt != null">
                update_at = #{record.updateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateBy != null">
                update_by = #{record.updateBy,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update plan_book
        set id = #{record.id,jdbcType=BIGINT},
        plan_id = #{record.planId,jdbcType=BIGINT},
        book_id = #{record.bookId,jdbcType=BIGINT},
        status = #{record.status,jdbcType=VARCHAR},
        stu_num = #{record.stuNum,jdbcType=BIGINT},
        teacher_num = #{record.teacherNum,jdbcType=BIGINT},
        actual_num = #{record.actualNum,jdbcType=INTEGER},
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
        update_by = #{record.updateBy,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.shenjunjie.booking.entity.PlanBook">
        update plan_book
        <set>
            <if test="planId != null">
                plan_id = #{planId,jdbcType=BIGINT},
            </if>
            <if test="bookId != null">
                book_id = #{bookId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="stuNum != null">
                stu_num = #{stuNum,jdbcType=BIGINT},
            </if>
            <if test="teacherNum != null">
                teacher_num = #{teacherNum,jdbcType=BIGINT},
            </if>
            <if test="actualNum != null">
                actual_num = #{actualNum,jdbcType=INTEGER},
            </if>
            <if test="updateAt != null">
                update_at = #{updateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.shenjunjie.booking.entity.PlanBook">
    update plan_book
    set plan_id = #{planId,jdbcType=BIGINT},
      book_id = #{bookId,jdbcType=BIGINT},
      status = #{status,jdbcType=VARCHAR},
      stu_num = #{stuNum,jdbcType=BIGINT},
      teacher_num = #{teacherNum,jdbcType=BIGINT},
      actual_num = #{actualNum,jdbcType=INTEGER},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>